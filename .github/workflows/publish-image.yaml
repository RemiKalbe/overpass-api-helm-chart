name: Publish Overpass API image

on:
  workflow_dispatch: # Allow manual triggering
  pull_request:
    types: [closed]

env:
  DOCKER_REPO: remikalbe/overpass-api-kube
  HELM_REPO: ghcr.io/${{ github.repository_owner }}/overpass-api-helm-chart

jobs:
  tag-official-version:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'overpass-api-update')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version and RC tag from labels
        run: |
          VERSION=$(echo "${{ toJson(github.event.pull_request.labels.*.name) }}" | jq -r '.[] | select(startswith("v-")) | sub("v-"; "")')
          RC_TAG=$(echo "${{ toJson(github.event.pull_request.labels.*.name) }}" | jq -r '.[] | select(startswith("rc-")) | sub("rc-"; "")')
          echo "NEW_VERSION=$VERSION" >> $GITHUB_ENV
          echo "RC_TAG=$RC_TAG" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag and push official version
        run: |
          docker pull ${{ env.DOCKER_REPO }}:${{ env.RC_TAG }}
          docker tag ${{ env.DOCKER_REPO }}:${{ env.RC_TAG }} ${{ env.DOCKER_REPO }}:${{ env.NEW_VERSION }}
          docker tag ${{ env.DOCKER_REPO }}:${{ env.RC_TAG }} ${{ env.DOCKER_REPO }}:latest
          docker push ${{ env.DOCKER_REPO }}:${{ env.NEW_VERSION }}
          docker push ${{ env.DOCKER_REPO }}:latest

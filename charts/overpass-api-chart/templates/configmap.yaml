apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "overpass-api.fullname" . }}-scripts
  labels:
    {{- include "overpass-api.labels" . | nindent 4 }}
data:
  init_overpass.sh: |
    #!/bin/bash

    set -e

    OVERPASS_DB_DIR="/app/db"
    OVERPASS_DIFF_DIR="/app/diffs"

    download_planet_file() {
      local file_ext="${OVERPASS_PLANET_URL##*.}"
      local planet_file="/app/planet.${file_ext}"

      echo "Downloading planet file with extension: ${file_ext}"
      wget -O "${planet_file}" "$OVERPASS_PLANET_URL"

      echo "${planet_file}"
    }

    prepare_init_file() {
      local planet_file="$1"
      local file_ext="${planet_file##*.}"

      if [ "$file_ext" = "pbf" ]; then
        echo "Converting PBF to OSM format..."
        osmium cat -o "/app/planet.osm" "${planet_file}"
        echo "/app/planet.osm"
      else
        echo "${planet_file}"
      fi
    }

    cleanup_files() {
      local planet_file="$1"
      local init_file="$2"

      rm "${planet_file}"
      [ "${planet_file}" != "${init_file}" ] && rm "${init_file}"
    }

    initialize_database() {
      if [ ! -f "$OVERPASS_DB_DIR/replicate_id" ]; then
        echo "Initializing database..."
        mkdir -p "$OVERPASS_DB_DIR"
        mkdir -p "$OVERPASS_DIFF_DIR"

        local planet_file=$(download_planet_file)
        local init_file=$(prepare_init_file "${planet_file}")

        /app/osm-3s/bin/init_osm3s.sh "${init_file}" "$OVERPASS_DB_DIR" "/app/osm-3s" --meta="$OVERPASS_META" "--compression-method=$OVERPASS_COMPRESSION"

        cleanup_files "${planet_file}" "${init_file}"

        echo "Database initialization complete."
      else
        echo "Database already initialized."
      fi
    }

    main() {
      initialize_database
    }

    main

  run_overpass.sh: |
    #!/bin/bash

    set -e

    OVERPASS_DB_DIR="/app/db"
    OVERPASS_DIFF_DIR="/app/diffs"

    start_api_and_updates() {
      echo "Starting Overpass API and update process..."
      /app/osm-3s/bin/dispatcher --osm-base --meta="$OVERPASS_META" --db-dir="$OVERPASS_DB_DIR" &
      
      # Start the continuous update process
      /app/osm-3s/bin/fetch_osc.sh "$OVERPASS_UPDATE_FREQUENCY" "$OVERPASS_DIFF_URL" "$OVERPASS_DIFF_DIR" &
      /app/osm-3s/bin/apply_osc_to_db.sh "$OVERPASS_DIFF_DIR" "$OVERPASS_UPDATE_FREQUENCY" --meta="$OVERPASS_META" &
      /app/osm-3s/bin/rules_loop.sh "$OVERPASS_DB_DIR" "$OVERPASS_RULES_LOAD" &

      echo "Configuring and starting fcgiwrap..."
      sed -i "s/FCGI_CHILDREN=.*/FCGI_CHILDREN=$OVERPASS_FASTCGI_PROCESSES/" /etc/init.d/fcgiwrap
      service fcgiwrap start

      echo "Configuring Overpass settings..."
      echo "$OVERPASS_RATE_LIMIT" > "$OVERPASS_DB_DIR/rate_limit"
      echo "$OVERPASS_TIME" > "$OVERPASS_DB_DIR/max_allowed_time"
      echo "$OVERPASS_SPACE" > "$OVERPASS_DB_DIR/max_allowed_space"
      echo "$OVERPASS_MAX_TIMEOUT" > "$OVERPASS_DB_DIR/max_allowed_timeout"

      echo "Starting nginx..."
      nginx -g 'daemon off;'
    }

    main() {
      start_api_and_updates
    }

    main

  health_check.sh: |
    #!/bin/bash

    # Credits to https://github.com/wiktorn/Overpass-API/blob/master/docker-healthcheck.sh

    set -e -o pipefail

    NODE_ID=1

    # if we allow duplicate queries, the healthcheck will fail because it always fetches node id 1
    # if that is the case (default), we query a random node
    if [[ ! -n ${OVERPASS_ALLOW_DUPLICATE_QUERIES} || ${OVERPASS_ALLOW_DUPLICATE_QUERIES} == "no" ]]; then
      NODE_ID=$(shuf -i 1-10000000 -n 1)
    fi

    OVERPASS_HEALTHCHECK='curl --noproxy "*" -qf "http://localhost/api/interpreter?data=\[out:json\];node(${NODE_ID});out;" | jq ".generator" |grep -q Overpass || exit 1'

    eval "${OVERPASS_HEALTHCHECK}"